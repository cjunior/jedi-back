version: "3.8"

services:
  jedi:
    container_name: jedi_backend
    build:
      context: ./jedi
    ports:
      - 8080:8080
    env_file:
      - .env
    logging:
      options:
        max-size: 10m
    networks:
      - jedi-network

  psql:
    container_name: psql
    image: postgres:alpine3.19
    ports:
      - 5432:5432
    volumes:
      - ./docker/postgres-data:/var/lib/postgresql/data
    env_file:
      - .env
    restart: unless-stopped
    logging:
      options:
        max-size: 10m
    networks:
      - jedi-network

  jedi-minio:
    image: minio/minio:RELEASE.2025-05-24T17-08-30Z
    container_name: jedi-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file:
      - .env
    entrypoint: >
      /bin/sh -c '
        isAlive() { curl -sf http://localhost:9000/minio/health/live; }
        minio server /data --console-address ":9001" --quiet & echo $! > /tmp/minio.pid
        until isAlive; do sleep 1; done
        echo "MinIO is ready. Proceeding with setup..."
        mc alias set myminio http://localhost:9000 ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY}
        mc mb myminio/${MINIO_BUCKET} --ignore-existing
        mc anonymous set public myminio/${MINIO_BUCKET}
        kill -s INT $(cat /tmp/minio.pid) && rm /tmp/minio.pid
        while isAlive; do sleep 0.1; done
        exec minio server /data --console-address ":9001"
      '
    command: server /data --console-address ":9001"
    volumes:
      - jedi-minio-data:/data
    restart: unless-stopped
    networks:
      - jedi-network

volumes:
  jedi-minio-data:

networks:
  jedi-network:
    driver: bridge
