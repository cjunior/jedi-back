services:
  jedi:
    container_name: jedi_backend
    build:
      context: ./jedi
    expose:
      - 8080:8080
    volumes:
      - ${HOME}/jedi-arquivos/documentos:/home/app/jedi-arquivos/documentos
    environment:
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
      APP_BASE_URL: ${APP_BASE_URL}
    logging:
      options:
        max-size: 10m
    networks:
      - jedi-network

  psql:
    container_name: psql
    image: postgres:alpine3.19
    ports:
      - 5432:5432
    volumes:
      - ./docker/postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: unless-stopped
    logging:
      options:
        max-size: 10m
    networks:
      - jedi-network

  caddy_reverse_proxy:
    image: caddy:2
    container_name: caddy_reverse_proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - jedi
    networks:
      - jedi-network

networks:
  jedi-network:
    driver: bridge

volumes:
  caddy_data:
  caddy_config:
